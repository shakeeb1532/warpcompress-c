name: Build & Release warpc

on:
  push:
    branches: ['**']          # build artifacts on any branch push
    tags: ['v*']              # release when pushing version tags (e.g. v0.1.0)
  workflow_dispatch: {}

permissions:
  contents: write             # required to create Releases

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    env:
      VERSION: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'dev' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake build-essential pkg-config \
            libzstd-dev liblz4-dev libsnappy-dev libxxhash-dev

      - name: Install deps (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake zstd lz4 snappy xxhash

      - name: Configure CMake
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release ${{ runner.os == 'macOS' && '-DCMAKE_OSX_ARCHITECTURES=arm64' || '' }}

      - name: Build
        run: cmake --build build -j

      - name: Package artifact (tar.gz)
        run: |
          mkdir -p dist
          OS="${{ matrix.os }}"
          ARCH="${{ runner.arch }}"
          NAME="warpc-${VERSION}-${OS}-${ARCH}"
          cp LICENSE README.md build/warpc .
          tar -czf "dist/${NAME}.tar.gz" warpc LICENSE README.md
          rm -f warpc

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: warpc-${{ env.VERSION }}-${{ matrix.os }}-${{ runner.arch }}
          path: dist/*.tar.gz
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create/Update Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: dist/**/*.tar.gz
          draft: false
          prerelease: false
